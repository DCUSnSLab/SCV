// generated from rosidl_adapter/resource/msg.idl.em
// with input from ublox_msgs/msg/RxmSFRB.msg
// generated code does not contain a copyright notice


module ublox_msgs {
  module msg {
    typedef uint32 uint32__10[10];
    module RxmSFRB_Constants {
      const uint8 CLASS_ID = 2;
      const uint8 MESSAGE_ID = 17;
    };
    @verbatim (language="comment", text=
      "RXM-SFRB (0x02 0x11)" "\n"
      "Subframe Buffer" "\n"
      "" "\n"
      "The content of one single subframe buffer" "\n"
      "For GPS satellites, the 10 dwrd values contain the parity checked subframe " "\n"
      "data for 10 Words. Each dwrd has 24 Bits with valid data (Bits 23 to 0). The " "\n"
      "remaining 8 bits (31 to 24) have an undefined value. The direction within the " "\n"
      "Word is that the higher order bits are received from the SV first. Example: " "\n"
      "The Preamble can be found in dwrd[0], at bit position 23 down to 16. For more " "\n"
      "details on the data format please refer to the ICD-GPS-200C" "\n"
      "Interface document." "\n"
      "For SBAS satellites, the 250 Bit message block can be found in dwrd[0] to " "\n"
      "dwrd[6] for the first 224 bits. The remaining 26 bits are in dwrd[7], whereas" "\n"
      "Bits 25 and 24 are the last two data bits, and Bits 23 down to 0 are the" "\n"
      "parity bits. For more information on SBAS data format, please refer to " "\n"
      "RTCA/DO-229C (MOPS), Appendix A.")
    struct RxmSFRB {
      @verbatim (language="comment", text=
        "Channel Number")
      uint8 chn;

      @verbatim (language="comment", text=
        "ID of Satellite transmitting Subframe")
      uint8 svid;

      @verbatim (language="comment", text=
        "Words of Data")
      uint32__10 dwrd;
    };
  };
};
