// generated from rosidl_adapter/resource/msg.idl.em
// with input from ublox_msgs/msg/NavSATSV.msg
// generated code does not contain a copyright notice


module ublox_msgs {
  module msg {
    module NavSATSV_Constants {
      @verbatim (language="comment", text=
        "Signal quality indicator:")
      const uint32 FLAGS_QUALITY_IND_MASK = 7;
      @verbatim (language="comment", text=
        "no signal")
      const uint8 QUALITY_IND_NO_SIGNAL = 0;
      @verbatim (language="comment", text=
        "searching signal")
      const uint8 QUALITY_IND_SEARCHING_SIGNAL = 1;
      @verbatim (language="comment", text=
        "signal acquired")
      const uint8 QUALITY_IND_SIGNAL_ACQUIRED = 2;
      @verbatim (language="comment", text=
        "signal detected but" "\n"        "unusable")
      const uint8 QUALITY_IND_SIGNAL_DETECTED_BUT_UNUSABLE = 3;
      @verbatim (language="comment", text=
        "code locked and time" "\n"        "synchronized")
      const uint8 QUALITY_IND_CODE_LOCKED_AND_TIME_SYNC = 4;
      @verbatim (language="comment", text=
        "code and carrier" "\n"        "locked and time" "\n"        "synchronized," "\n"        "quality = 1")
      const uint8 QUALITY_IND_CODE_AND_CARR_LOCK_AND_TIME_SYNC1 = 5;
      @verbatim (language="comment", text=
        "code and carrier" "\n"        "locked and time" "\n"        "synchronized," "\n"        "quality = 2")
      const uint8 QUALITY_IND_CODE_AND_CARR_LOCK_AND_TIME_SYNC2 = 6;
      @verbatim (language="comment", text=
        "code and carrier" "\n"        "locked and time" "\n"        "synchronized," "\n"        "quality = 3")
      const uint8 QUALITY_IND_CODE_AND_CARR_LOCK_AND_TIME_SYNC3 = 7;
      @verbatim (language="comment", text=
        "Note: Since IMES signals are not time synchronized, a channel tracking an IMES" "\n"        "signal can never reach a quality indicator value of higher than 3." "\n"        "whether SV is currently being" "\n"        "used for navigation")
      const uint32 FLAGS_SV_USED = 8;
      @verbatim (language="comment", text=
        "SV health flag:")
      const uint32 FLAGS_HEALTH_MASK = 48;
      @verbatim (language="comment", text=
        "unknown")
      const uint32 HEALTH_UNKNOWN = 0;
      @verbatim (language="comment", text=
        "healthy")
      const uint32 HEALTH_HEALTHY = 1;
      @verbatim (language="comment", text=
        "unhealthy")
      const uint32 HEALTH_UNHEALTHY = 2;
      @verbatim (language="comment", text=
        "whether differential correction" "\n"        "data is available for this SV")
      const uint32 FLAGS_DIFF_CORR = 64;
      @verbatim (language="comment", text=
        "whether carrier smoothed" "\n"        "pseudorange used")
      const uint32 FLAGS_SMOOTHED = 128;
      @verbatim (language="comment", text=
        "Orbit source:")
      const uint32 FLAGS_ORBIT_SOURCE_MASK = 1792;
      @verbatim (language="comment", text=
        "no orbit information is" "\n"        "available for this SV")
      const uint32 ORBIT_SOURCE_UNAVAILABLE = 0;
      @verbatim (language="comment", text=
        "ephemeris is used")
      const uint32 ORBIT_SOURCE_EPH = 256;
      @verbatim (language="comment", text=
        "almanac is used")
      const uint32 ORBIT_SOURCE_ALM = 512;
      @verbatim (language="comment", text=
        "AssistNow Offline orbit is" "\n"        "used")
      const uint32 ORBIT_SOURCE_ASSIST_OFFLINE = 768;
      @verbatim (language="comment", text=
        "AssistNow Autonomous orbit is" "\n"        "used")
      const uint32 ORBIT_SOURCE_ASSIST_AUTONOMOUS = 1024;
      @verbatim (language="comment", text=
        "other orbit information is" "\n"        "used")
      const uint32 ORBIT_SOURCE_OTHER1 = 1280;
      @verbatim (language="comment", text=
        "other orbit information is" "\n"        "used")
      const uint32 ORBIT_SOURCE_OTHER2 = 1536;
      @verbatim (language="comment", text=
        "other orbit information is" "\n"        "used")
      const uint32 ORBIT_SOURCE_OTHER3 = 1792;
      @verbatim (language="comment", text=
        "whether ephemeris is available" "\n"        "for this SV")
      const uint32 FLAGS_EPH_AVAIL = 2048;
      @verbatim (language="comment", text=
        "whether almanac is available for" "\n"        "this SV")
      const uint32 FLAGS_ALM_AVAIL = 4096;
      @verbatim (language="comment", text=
        "whether AssistNow Offline data" "\n"        "is available for this SV")
      const uint32 FLAGS_ANO_AVAIL = 8192;
      @verbatim (language="comment", text=
        "whether AssistNow Autonomous" "\n"        "data is available for this SV")
      const uint32 FLAGS_AOP_AVAIL = 16384;
      @verbatim (language="comment", text=
        "whether SBAS corrections have" "\n"        "been used for this SV")
      const uint32 FLAGS_SBAS_CORR_USED = 65536;
      @verbatim (language="comment", text=
        "whether RTCM corrections have" "\n"        "been used for this SV")
      const uint32 FLAGS_RTCM_CORR_USED = 131072;
      @verbatim (language="comment", text=
        "whether Pseudorange corrections" "\n"        "have been used for this SV")
      const uint32 FLAGS_PR_CORR_USED = 1048576;
      @verbatim (language="comment", text=
        "whether Carrier range" "\n"        "corrections have been used for" "\n"        "this SV")
      const uint32 FLAGS_CR_CORR_USED = 2097152;
      @verbatim (language="comment", text=
        "whether Range rate (Doppler)" "\n"        "corrections have been used for" "\n"        "this SV")
      const uint32 FLAGS_DO_CORR_USED = 4194304;
    };
    @verbatim (language="comment", text=
      "see NAV-SAT message")
    struct NavSATSV {
      @verbatim (language="comment", text=
        "GNSS identifier")
      uint8 gnss_id;

      @verbatim (language="comment", text=
        "Satellite identifier")
      uint8 sv_id;

      @verbatim (language="comment", text=
        "Carrier to noise ratio (signal strength) ]dBHz")
      uint8 cno;

      @verbatim (language="comment", text=
        "Elevation (range: +/-90), unknown if out of range")
      @unit (value="deg")
      int8 elev;

      @verbatim (language="comment", text=
        "Azimuth (range 0-360), unknown if elevation is out of range" "\n"
        "[deg]")
      @unit (value="deg")
      int16 azim;

      @verbatim (language="comment", text=
        "Pseudo range residual")
      @unit (value="0.1 m")
      int16 pr_res;

      @verbatim (language="comment", text=
        "Bitmask")
      uint32 flags;
    };
  };
};
